// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	models "stakeway_test_task/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// RequestRepo is an autogenerated mock type for the RequestRepo type
type RequestRepo struct {
	mock.Mock
}

// CreateRequest provides a mock function with given fields: request
func (_m *RequestRepo) CreateRequest(request *models.ValidatorRequest) error {
	ret := _m.Called(request)

	if len(ret) == 0 {
		panic("no return value specified for CreateRequest")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.ValidatorRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetKeysByRequestID provides a mock function with given fields: requestID
func (_m *RequestRepo) GetKeysByRequestID(requestID string) ([]string, error) {
	ret := _m.Called(requestID)

	if len(ret) == 0 {
		panic("no return value specified for GetKeysByRequestID")
	}

	var r0 []string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]string, error)); ok {
		return rf(requestID)
	}
	if rf, ok := ret.Get(0).(func(string) []string); ok {
		r0 = rf(requestID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(requestID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRequestByID provides a mock function with given fields: id
func (_m *RequestRepo) GetRequestByID(id string) (*models.ValidatorRequest, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetRequestByID")
	}

	var r0 *models.ValidatorRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.ValidatorRequest, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) *models.ValidatorRequest); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ValidatorRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveValidatorKey provides a mock function with given fields: key
func (_m *RequestRepo) SaveValidatorKey(key *models.ValidatorKey) error {
	ret := _m.Called(key)

	if len(ret) == 0 {
		panic("no return value specified for SaveValidatorKey")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.ValidatorKey) error); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateRequestStatus provides a mock function with given fields: id, status, errorMessage
func (_m *RequestRepo) UpdateRequestStatus(id string, status models.Status, errorMessage string) error {
	ret := _m.Called(id, status, errorMessage)

	if len(ret) == 0 {
		panic("no return value specified for UpdateRequestStatus")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, models.Status, string) error); ok {
		r0 = rf(id, status, errorMessage)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRequestRepo creates a new instance of RequestRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRequestRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *RequestRepo {
	mock := &RequestRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
